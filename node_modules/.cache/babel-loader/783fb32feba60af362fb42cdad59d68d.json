{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/components/users/Search.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter Something', 'light');\n    } else {\n      searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })), showClear && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","setAlert","text","setText","onSubmit","e","preventDefault","onChange","target","value","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA,UAAzB;AAAqCC,EAAAA;AAArC,CAAD,KAAoD;AAClE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEC,QAAMS,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGJ,IAAI,KAAK,EAAZ,EAAgB;AACdD,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACD,KAFD,MAEO;AACLH,MAAAA,WAAW,CAACI,IAAD,CAAX;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AAEF,GATD;;AAWA,QAAMI,QAAQ,GAAIF,CAAD,IAAQF,OAAO,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAAhC;;AAEE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEL,QAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AACc,IAAA,IAAI,EAAC,MADnB;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,KAAK,EAAEF,IAHT;AAIE,IAAA,QAAQ,EAAEK,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAoC,IAAA,SAAS,EAAC,wBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADJ,EAUKR,SAAS,iBACR;AAAS,IAAA,SAAS,EAAG,yBAArB;AACA,IAAA,OAAO,EAAEC,UADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXN,CADF;AAoBH,CApCD;;AAsCAH,MAAM,CAACa,SAAP,GAAmB;AACjBZ,EAAAA,WAAW,EAAEF,SAAS,CAACe,IAAV,CAAeC,UADX;AAEjBZ,EAAAA,UAAU,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UAFV;AAGjBb,EAAAA,SAAS,EAAEH,SAAS,CAACiB,IAAV,CAAeD,UAHT;AAIjBX,EAAAA,QAAQ,EAAEL,SAAS,CAACe,IAAV,CAAeC;AAJR,CAAnB;AAOA,eAAef,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({searchUsers, showClear, clearUsers, setAlert}) => {\n const [text, setText] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if(text === '') {\n      setAlert('Please enter Something', 'light')\n    } else {\n      searchUsers(text);\n      setText('');\n    }\n    \n  }\n\n  const onChange = (e) =>  setText(e.target.value)\n  \n    return (\n      <div>\n          <form onSubmit={onSubmit} className='form'>\n            <input \n              type='text' name='text' \n              placeholder='Search Users...' \n              value={text}\n              onChange={onChange}\n            />\n            <input type='submit' value='Search' className='btn btn-dark btn-block'/>\n          </form>\n          {showClear && (\n            < button className = 'btn btn-light btn-block'\n            onClick={clearUsers} \n            > \n            Clear \n            </button>\n          )}\n      </div>\n    );\n}\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired,\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}