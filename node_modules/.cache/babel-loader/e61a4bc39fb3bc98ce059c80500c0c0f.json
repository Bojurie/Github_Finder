{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/components/users/Search.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers\n}) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.text === '') {\n      this.props.setAlert('Please enter Something', 'light');\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({\n        text: ''\n      });\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.onSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: this.state.text,\n    onChange: this.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })), showClear && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","text","setText","onSubmit","e","preventDefault","state","props","setAlert","setState","onChange","target","value","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAAD,KAA0C;AACxD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AACC,QAAMQ,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,KAAKC,KAAL,CAAWL,IAAX,KAAoB,EAAvB,EAA2B;AACzB,WAAKM,KAAL,CAAWC,QAAX,CAAoB,wBAApB,EAA8C,OAA9C;AACD,KAFD,MAEO;AACL,WAAKD,KAAL,CAAWT,WAAX,CAAuB,KAAKQ,KAAL,CAAWL,IAAlC;AACA,WAAKQ,QAAL,CAAc;AAACR,QAAAA,IAAI,EAAE;AAAP,OAAd;AACD;AAEF,GATD;;AAWA,QAAMS,QAAQ,GAAIN,CAAD,IAAQF,OAAO,CAACE,CAAC,CAACO,MAAF,CAASC,KAAV,CAAhC;;AAEE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAE,KAAKT,QAArB;AAA+B,IAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AACc,IAAA,IAAI,EAAC,MADnB;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,KAAK,EAAE,KAAKG,KAAL,CAAWL,IAHpB;AAIE,IAAA,QAAQ,EAAE,KAAKS,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAoC,IAAA,SAAS,EAAC,wBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADJ,EAUKX,SAAS,iBACR;AAAS,IAAA,SAAS,EAAG,yBAArB;AACA,IAAA,OAAO,EAAEC,UADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXN,CADF;AAqBH,CApCD;;AAqCAH,MAAM,CAACgB,SAAP,GAAmB;AACjBf,EAAAA,WAAW,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADX;AAEjBf,EAAAA,UAAU,EAAEJ,SAAS,CAACkB,IAAV,CAAeC,UAFV;AAGjBhB,EAAAA,SAAS,EAAEH,SAAS,CAACoB,IAAV,CAAeD,UAHT;AAIjBP,EAAAA,QAAQ,EAAEZ,SAAS,CAACkB,IAAV,CAAeC;AAJR,CAAnB;AAMA,eAAelB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({searchUsers, showClear, clearUsers}) => {\n const [text, setText] = useState('');\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if(this.state.text === '') {\n      this.props.setAlert('Please enter Something', 'light')\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({text: ''})\n    }\n    \n  }\n\n  const onChange = (e) =>  setText(e.target.value)\n  \n    return (\n      <div>\n          <form onSubmit={this.onSubmit} className='form'>\n            <input \n              type='text' name='text' \n              placeholder='Search Users...' \n              value={this.state.text}\n              onChange={this.onChange}\n            />\n            <input type='submit' value='Search' className='btn btn-dark btn-block'/>\n          </form>\n          {showClear && (\n            < button className = 'btn btn-light btn-block'\n            onClick={clearUsers} \n            > \n            Clear \n            </button>\n          )}\n          \n      </div>\n    );\n}\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired,\n}\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}