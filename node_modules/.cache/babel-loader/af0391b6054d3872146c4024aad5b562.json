{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/components/users/User.js\";\nimport React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext';\n\nconst User = ({\n  getUserRepos,\n  repos,\n  match\n}) => {\n  const githubContext = useContext(GithubContext);\n  const {\n    user,\n    loading,\n    getUser\n  } = githubContext;\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login); //  eslint-disable-next-line\n  }, []);\n  const {\n    name,\n    avatar_url,\n    location,\n    bio,\n    company,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable\n  } = user;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Back To Search\"), \"Hireable:\", '', hireable ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-check text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times-circle text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card grid-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"all-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar_url,\n    className: \"round-img\",\n    alt: \"\",\n    style: {\n      width: '150px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Location: \", location)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, bio && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Bio\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, bio)), /*#__PURE__*/React.createElement(\"a\", {\n    href: html_url,\n    className: \"btn btn-dark my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Visit Github Profile\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, login && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Username: \"), login)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, company && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Company: \"), company)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, blog && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Website: \"), blog))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge badge-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Followers: \", followers), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge badge-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Following: \", following), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Public Repos: \", public_repos), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge badge-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Public Gists: \", public_gists)), /*#__PURE__*/React.createElement(Repos, {\n    repos: repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }));\n};\n\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUserRepos: PropTypes.func.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/components/users/User.js"],"names":["React","Fragment","useEffect","useContext","Spinner","Repos","PropTypes","Link","GithubContext","User","getUserRepos","repos","match","githubContext","user","loading","getUser","params","login","name","avatar_url","location","bio","company","blog","html_url","followers","following","public_repos","public_gists","hireable","width","propTypes","bool","object","isRequired","array","func"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'; \nimport GithubContext from '../../context/github/githubContext';\n\nconst User = ({ getUserRepos, repos, match }) => {\n    const githubContext = useContext(GithubContext);\n\n    const { user, loading, getUser } = githubContext;\n\n  useEffect(() => {\n     getUser(match.params.login);\n     getUserRepos(match.params.login);\n    //  eslint-disable-next-line\n  }, [ ]);\n\n    const {\n      name,\n      avatar_url,\n      location,\n      bio,\n      company,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable\n    } = user;\n\n    if(loading){\n      return<Spinner/>\n    }\n    return (\n      <Fragment>\n        <Link to='/' className='btn btn-light'>\n        Back To Search\n        </Link>\n        Hireable:{''}\n        {hireable ? (\n          <i className='fas fa-check text-success' />\n        ) : (\n          <i className='fas fa-times-circle text-danger'/>\n        )}\n        <div className='card grid-2'>\n          <div className='all-center'>\n              <img \n              src={avatar_url} \n              className='round-img' \n              alt='' \n              style={{ width: '150px' }}\n              />\n              <h1>{name}</h1>\n              <p>Location: {location}</p>\n          </div>\n          <div>\n          {bio && (\n            <Fragment>\n              <h3>Bio</h3>\n              <p>{bio}</p>\n            </Fragment>\n          )}\n          <a href={html_url} className='btn btn-dark my-1'>\n          Visit Github Profile\n          </a>\n          <ul>\n            <li>{login && <Fragment>\n              <strong>Username: </strong>{login}\n            </Fragment>}</li>\n\n            <li>{company && <Fragment>\n              <strong>Company: </strong>{company}\n            </Fragment>}</li>\n\n            <li>{blog && <Fragment>\n              <strong>Website: </strong>{blog}\n            </Fragment>}</li>\n          </ul>\n          </div>\n        </div>\n\n        <div className='card text-center'>\n          <div className='badge badge-primary'>Followers: {followers}</div>\n          <div className='badge badge-success'>Following: {following}</div>\n          <div className='badge badge-light'>Public Repos: {public_repos}</div>\n          <div className='badge badge-dark'>Public Gists: {public_gists}</div>\n        </div>\n\n        <Repos repos={repos}/>\n      </Fragment>\n    );\n}\n\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUserRepos: PropTypes.func.isRequired,\n\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}