{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/App.js\";\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null); // Search Github Users\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`http://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUsers(res.data.items);\n    setLoading(false);\n  }; // Get a Single Github User\n\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(`http://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUser(res.data);\n    setLoading(false);\n  }; // Get Users Repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`http://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n      {\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setRepos(res.data);\n    setLoading(false);\n  }; // Clear Users\n\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  }; // Show Alert\n\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      searchUsers: searchUsers,\n      clearUsers: clearUsers,\n      showClear: users.length > 0 ? true : false,\n      setAlert: showAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 23\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Users, {\n      loading: loading,\n      users: users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 26\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      user: user,\n      repos: repos,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","searchUsers","text","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","showAlert","msg","type","setTimeout","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n \n\n      // Search Github Users\n const searchUsers = async text => {\n   setLoading (true);\n\n     const res = await axios.get(\n       `http://api.github.com/search/users?q=${text}&client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n    setUsers(res.data.items);\n    setLoading(false);\n  }\n\n  // Get a Single Github User\n  const getUser = async username => {\n    setLoading(true);\n\n      const res = await axios.get(\n        `http://api.github.com/users/${username}?client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n      setUser(res.data);\n       setLoading(false);\n  }\n\n  // Get Users Repos\n  const getUserRepos = async username => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `http://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n      {\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  // Clear Users\n  const clearUsers = () => {\n     setUsers([]);\n     setLoading(false);\n  }\n\n  // Show Alert\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type});\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n    return (\n      <Router>\n        <div className='app'>\n            <Navbar />\n            <div className = 'container' >\n              <Alert alert={alert} />\n              <Switch>\n                <Route exact path='/' render={props => (\n                  <Fragment>\n                      < Search\n                      searchUsers = {\n                        searchUsers\n                      }\n                      clearUsers = {\n                        clearUsers\n                      }\n                      showClear = {\n                        users.length > 0 ? true : false\n                      }\n                      setAlert = {\n                        showAlert\n                      }\n                      /> <\n                      Users loading = {\n                        loading\n                      }\n                      users = {\n                        users\n                      }\n                      />\n                  </Fragment>\n                )}/>\n                <Route exact path='/about' component={About}/>\n                <Route \n                exact \n                path='/user/:login' \n                render={props => (\n                  <User \n                  { ...props} \n                  getUser={getUser} \n                  getUserRepos={getUserRepos}\n                  user={user} \n                  repos={repos}\n                  loading={loading} />\n                )}\n                />\n              </Switch>\n             \n            </div>\n        </div>\n      </Router>\n    )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}