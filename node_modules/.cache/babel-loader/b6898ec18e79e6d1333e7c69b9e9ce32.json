{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/context/github/GithubState.js\";\nimport React, { userReducer, useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Search Users\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`http://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get User\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(`http://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // Get Repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`http://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n      {\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; // Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/context/github/GithubState.js"],"names":["React","userReducer","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, { userReducer, useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS\n} from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  }\n\nconst [state, dispatch] = useReducer(GithubReducer, initialState);\n\n// Search Users\n const searchUsers = async text => {\n   setLoading();\n\n   const res = await axios.get(\n     `http://api.github.com/search/users?q=${text}&client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n   dispatch({\n     type: SEARCH_USERS,\n     payload: res.data.items\n   })\n\n }\n\n// Get User\n  const getUser = async username => {\n    setLoading();\n\n    const res = await axios.get(\n      `http://api.github.com/users/${username}?client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n   dispatch({\n     type:GET_USER,\n     payload: res.data\n   });\n  }\n\n// Get Repos\n  const getUserRepos = async username => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `http://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n      {\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n   dispatch({\n     type: GET_REPOS,\n     payload: res.data\n   })\n  };\n\n\n// Clear Users\n  const clearUsers = () => dispatch({ type: CLEAR_USERS});\n\n// Set Loading\n\nconst setLoading = () => dispatch({ type: SET_LOADING});\n\nreturn (\n  <GithubContext.Provider\n  value={{\n    users: state.users,\n    user: state.user,\n    repos: state.repos,\n    loading: state.loading,\n    searchUsers,\n    clearUsers,\n    getUser,\n    getUserRepos\n  }}\n  >\n  {props.children}\n  </GithubContext.Provider>\n);\n}\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}