{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      repos: [],\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`http://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`http://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`http://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        repos: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        users: [],\n        loading: false\n      });\n    };\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(`http://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    this.setState({\n      users: res.data,\n      loading: false\n    });\n  } // Search Github Users\n\n\n  render() {\n    const {\n      users,\n      user,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      alert: this.state.alert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 23\n        }\n      }), \" \", /*#__PURE__*/React.createElement(Users, {\n        loading: loading,\n        users: users,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 26\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/user/:login\",\n      render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n        getUser: this.getUser,\n        user: user,\n        loading: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","App","state","users","user","repos","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","setAlert","msg","type","setTimeout","componentDidMount","render","props","length"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component{\n  state = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n    alert: null,\n    \n  }\n   async componentDidMount(){\n     this.setState({loading: true});\n\n    const res = await axios.get(\n      `http://api.github.com/users?client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n    this.setState({users: res.data, loading: false})\n  }\n\n      // Search Github Users\n  searchUsers = async text => {\n    this.setState ({loading: true})\n\n     const res = await axios.get(\n       `http://api.github.com/search/users?q=${text}&client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n     this.setState({\n       users: res.data.items,\n       loading: false\n     });\n  }\n\n  // Get a Single Github User\n  getUser = async (username) => {\n    this.setState ({loading: true})\n\n      const res = await axios.get(\n        `http://api.github.com/users/${username}?client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n      this.setState({\n        user: res.data,\n        loading: false\n      })\n  }\n\n  // Get Users Repos\n  getUserRepos = async (username) => {\n    this.setState({\n      loading: true\n    })\n\n    const res = await axios.get(\n      `http://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n    this.setState({\n      repos: res.data,\n      loading: false\n    })\n  }\n\n\n  // Clear Users\n  clearUsers = () => {\n    this.setState({users: [], loading: false });\n  }\n\n  // Show Alert\n  setAlert = (msg, type) => {\n    this.setState({alert: {msg, type } });\n\n    setTimeout(() => this.setState({alert: null}), 5000);\n  }\n  render () {\n    const {users, user, loading} = this.state;\n    return (\n      <Router>\n        <div className='app'>\n            <Navbar />\n            <div className = 'container' >\n              <Alert alert={this.state.alert} />\n              <Switch>\n                <Route exact path='/' render={props => (\n                  <Fragment>\n                      < Search\n                      searchUsers = {\n                        this.searchUsers\n                      }\n                      clearUsers = {\n                        this.clearUsers\n                      }\n                      showClear = {\n                        users.length > 0 ? true : false\n                      }\n                      setAlert = {\n                        this.setAlert\n                      }\n                      /> <\n                      Users loading = {\n                        loading\n                      }\n                      users = {\n                        users\n                      }\n                      />\n                  </Fragment>\n                )}/>\n                <Route exact path='/about' component={About}/>\n                <Route \n                exact \n                path='/user/:login' \n                render={props => (\n                  <User \n                  { ...props} \n                  getUser={this.getUser} \n                  user={user} \n                  loading={loading} />\n                )}\n                />\n              </Switch>\n             \n            </div>\n        </div>\n      </Router>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}