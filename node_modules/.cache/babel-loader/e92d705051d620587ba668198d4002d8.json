{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/App.js\";\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\nimport GithubState from './context/github/GithubState';\n\nconst App = () => {\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null); // Get Users Repos\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`http://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n      {\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setRepos(res.data);\n    setLoading(false);\n  }; // Show Alert\n\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      setAlert: showAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Users, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      user: user,\n      repos: repos,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookair/Desktop/Full Stack web Development/React-folder/github_finder/my-app/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","GithubState","App","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","getUserRepos","username","res","get","process","env","REACT_APP_GITHUB_CLIENT_SECRET","data","showAlert","msg","type","setTimeout","props","getUser"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\n\nimport GithubState from './context/github/GithubState';\n\nconst App = () => {\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n\n  // Get Users Repos\n  const getUserRepos = async username => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `http://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=$\n      {\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  // Show Alert\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type});\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n    return (\n      <Router>\n        <div className='app'>\n            <Navbar />\n            <div className = 'container' >\n              <Alert alert={alert} />\n              <Switch>\n                <Route exact path='/' render={props => (\n                  <Fragment>\n                      < Search\n                      setAlert = {showAlert}\n                      /> \n                      <Users/>\n                  </Fragment>\n                )}/>\n                <Route exact path='/about' component={About}/>\n                <Route \n                exact \n                path='/user/:login' \n                render={props => (\n                  <User \n                  { ...props} \n                  getUser={getUser} \n                  getUserRepos={getUserRepos}\n                  user={user} \n                  repos={repos}\n                  loading={loading} />\n                )}\n                />\n              </Switch>\n             \n            </div>\n        </div>\n      </Router>\n    )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}